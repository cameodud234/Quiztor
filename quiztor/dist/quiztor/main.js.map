{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/drag-drop-file-upload.directive.ts","./src/app/add-user/add-user.component.ts","./src/app/add-user/add-user.component.html","./src/environments/environment.ts","./src/app/login-auth-guard.service.ts","./src/app/add-post/add-post.component.ts","./src/app/add-post/add-post.component.html","./src/app/admin-auth-guard.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user-list/user-list.component.ts","./src/app/user-list/user-list.component.html","./src/app/app.module.ts","./src/app/service.service.ts","./src/app/searchbar/searchbar.component.ts","./src/app/searchbar/searchbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user;\n\n  constructor(private formBuilder : FormBuilder, private service : ServiceService) { }\n\n  ngOnInit(): void {\n    this.user = this.formBuilder.group({\n      username : new FormControl(''),\n      password: new FormControl('')\n    })\n  }\n\n  register() {\n    this.service.registerUser(this.user.value)\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <ul class=\"nav navbar-nav mr-auto\">\n        <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/login\">Login</a></li>\n        <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/register\">Register</a></li>\n    </ul>\n</nav>\n\n<div class = \"d-flex justify-content-center\">\n    <div class=\"card m-3\">\n        <h5 class=\"card-header\"> Register </h5>\n        <div class=\"card-body\">\n            <form [formGroup]=\"user\" (ngSubmit)=\"register()\">\n                <div class=\"form-group\">\n                    <label>Username:</label>\n                    <input formControlName=\"username\" type=\"text\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label>Password:</label>\n                    <input formControlName=\"password\" type=\"password\" class=\"form-control\" required>\n                </div>\n                <div class=\"text-center\">\n                    <button class=\"btn btn-primary\">Register</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Directive, EventEmitter, Output, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appDragDropFileUpload]'\n})\n\nexport class DragDropFileUploadDirective {\n\n  @Output() fileDropped = new EventEmitter<any>();\n\n  @HostBinding('style.background-color') private background = '#ffffff';\n\n  // Dragover Event\n  @HostListener('dragover', ['$event']) dragOver(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.background = '#e2eefd';\n  }\n\n  // Dragleave Event\n  @HostListener('dragleave', ['$event']) public dragLeave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.background = '#ffffff'\n  }\n\n  // Drop Event\n  @HostListener('drop', ['$event']) public drop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.background = '#ffffff';\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      this.fileDropped.emit(files)\n    }\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\n\nexport class AddUserComponent implements OnInit {\n  user;\n\n  constructor(private formBuilder : FormBuilder, private service : ServiceService) { }\n\n  ngOnInit(): void {\n    this.user = this.formBuilder.group({\n      username : new FormControl(''),\n      password: new FormControl(''),\n      type : new FormControl('')\n    })\n  }\n\n  addUser() {\n    this.service.addUser(this.user.value);\n    alert(\"User Successfully Added\");\n  }\n}\n","<app-navbar></app-navbar>\n\n<div class=\"d-flex justify-content-center\">\n    <div class=\"card m-3\">\n        <h5 class=\"card-header\"> Add User </h5>\n        <div class=\"card-body\">\n            <form [formGroup]=\"user\" (ngSubmit)=\"addUser()\">\n                <div class=\"form-group\">\n                    <label>Username: </label>\n                    <input formControlName=\"username\" type=\"text\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label>Password: </label>\n                    <input formControlName=\"password\" type=\"password\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label>Type:</label>\n                    <select class=\"custom-select\" formControlName=\"type\">\n                        <option value=\"\" disasbled>Choose Type</option>\n                        <option value=\"true\">Admin</option>\n                        <option value=\"false\">Normal</option>\n                    </select>\n                </div>\n                <div class=\"text-center\">\n                    <button class=\"btn btn-primary\">Add User</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, CanActivate, Route, Router, RouterState, RouterStateSnapshot} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginAuthGuardService implements CanActivate {\n\n  canActivate(route : ActivatedRouteSnapshot, state : RouterStateSnapshot) : boolean {\n    if(window.sessionStorage.getItem(\"token\")) {\n      return true\n    } else {\n      this.router.navigate([\"/login\"])\n    }\n  }\n\n  constructor(private router : Router) { }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent implements OnInit {\n  post;\n\n  constructor(private formBuilder: FormBuilder, private service: ServiceService) { }\n\n  ngOnInit(): void {\n    this.post = this.formBuilder.group({\n      title: new FormControl(''),\n      description: new FormControl('')\n    })\n  }\n\n  addPost() {\n    this.service.addPost(this.post.value);\n    alert(\"Post Successfully Added\")\n  }\n\n}\n","<app-navbar [isSearchPressed]='false'></app-navbar>\n\n<div class=\"d-flex justify-content-center\">\n    <div class=\"card m-3\">\n        <h5 class=\"card-header\"> Add Post </h5>\n        <div class=\"card-body\">\n            <form [formGroup]=\"post\" (ngSubmit)=\"addPost()\">\n                <div class=\"form-group\">\n                    <label>Title: </label>\n                    <input formControlName=\"title\" type=\"text\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label>Description: </label>\n                    <input formControlName=\"description\" type=\"text\" class=\"form-control\" required>\n                </div>\n                <div class=\"text-center\">\n                    <button class=\"btn btn-primary\">Add</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuardService {\n\n  canActivate(route : ActivatedRouteSnapshot, state : RouterStateSnapshot) : boolean {\n    if(window.sessionStorage.getItem(\"admin\") == \"true\") {\n      return true\n    } else {\n      this.router.navigate([\"/login\"])\n    }\n  }\n\n  constructor(private router : Router) { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  posts;\n\n  constructor(private http : HttpClient, private service : ServiceService) { }\n\n  ngOnInit(): void {\n    this.getPosts();\n  }\n\n  getPosts() {\n    this.service.getPosts().subscribe(response => {\n      this.posts = response\n    })\n  }\n\n}\n","<app-navbar [isSearchPressed]=\"false\"></app-navbar>\n\n<!-- <table class=\"table table-striped\">\n    <thead class=\"thead-dark\">\n        <tr>\n            <th scope=\"col\">classifier</th>\n            <th scope=\"col\">meme_text</th>\n            <th scope=\"col\">title</th>\n            <th scope=\"col\">description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor =\"let post of posts\">\n            <td>{{post.classifier}}</td>\n            <td>{{post.meme_text}}</td>\n            <td>{{post.title}}</td>\n            <td>{{post.description}}</td>\n        </tr>\n    </tbody>\n</table> -->\n\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\n    integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\">\n\n<div class=\"d-flex justify-content-center container mt-5\" *ngFor=\"let post of posts\">\n    <figure class=\"snip1527\">\n        <!-- div class=\"image\"><img [src]=\"post.urlToImage\" alt=\"pr-sample23\" /></div> -->\n        <figcaption>\n            <h3 style=\"text-align:center;\">{{post.title}}</h3>\n            <p>{{post.description}}. </p>\n        </figcaption> <a href=\"#\"></a>\n    </figure>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quiztor';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  users;\n\n  constructor(private service : ServiceService) { }\n\n  ngOnInit(): void {\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.service.getUsers().subscribe((response) => {\n      this.users = response;\n    });\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<table class=\"table table-striped\">\n    <thead class=\"thead-dark\">\n        <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Username</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor =\"let user of users\">\n            <td>{{user._id}}</td>\n            <td>{{user.username}}</td>\n        </tr>\n    </tbody>\n</table>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { DragDropFileUploadDirective } from './drag-drop-file-upload.directive';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { SearchComponent } from './search/search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    RegisterComponent,\n    AddUserComponent,\n    UserListComponent,\n    NavbarComponent,\n    AddPostComponent,\n    DragDropFileUploadDirective,\n    SearchbarComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n  body;\n\n  constructor(private http : HttpClient, private router : Router) { }\n\n  login(username, password) {\n    return this.http.post(\"http://localhost:3000/login\", {\n      username,\n      password\n    }).subscribe((response : any) => {\n      if (response.token == undefined) {\n        alert(\"Login Incorrect\")\n        this.router.navigate([\"/login\"])\n      } else {\n        window.sessionStorage.setItem(\"token\", response.token)\n        window.sessionStorage.setItem(\"admin\", response.admin)\n        this.router.navigate([\"/dashboard\"])\n      }  \n    })\n  }\n\n  getPosts() {\n    return this.http.get(\"http://localhost:3000/posts\", {\n      headers : {\n        \"authorization\" : window.sessionStorage.getItem('token') || \"\"\n      }\n    })\n  }\n\n  getPostsSearch() {\n    return this.http.get(\"http://localhost:3000/showQuery\", {\n      headers : {\n        \"authorization\" : window.sessionStorage.getItem('token') || \"\"\n      }\n    })\n  }\n\n  addPost(formValues) {\n    this.body = {\n      classifier : \"placeholder\",\n      meme_text : \"placeholder\",\n      description : formValues.description,\n      title : formValues.title\n    }\n\n    this.router.navigate([\"/dashboard\"])\n    return this.http.post(\"http://localhost:3000/posts\", this.body, {\n      headers : {\n        \"authorization\" : window.sessionStorage.getItem('token') || \"\"\n      }\n    }).subscribe();\n  }\n\n  registerUser(formValues) {\n    this.body = {\n      username : formValues.username,\n      password : formValues.password,\n      admin : false\n    }\n\n    this.router.navigate([\"/login\"])\n    return this.http.post(\"http://localhost:3000/nonadmin_users\", this.body).subscribe()\n  }\n\n  getUsers() {\n    return this.http.get(\"http://localhost:3000/users\", {\n      headers : {\n        \"authorization\" : window.sessionStorage.getItem('token') || \"\"\n      }\n    })\n  }\n\n  addUser(formValues) {\n    this.body = {\n      username : formValues.username,\n      password : formValues.password,\n      admin : formValues.type\n    }\n\n\n    this.router.navigate([\"/userList\"])\n    return this.http.post(\"http://localhost:3000/users\", this.body, {\n      headers : {\n        \"authorization\" : window.sessionStorage.getItem('token') || \"\"\n      }\n    }).subscribe()\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-searchbar',\n  templateUrl: './searchbar.component.html',\n  styleUrls: ['./searchbar.component.css']\n})\nexport class SearchbarComponent implements OnInit {\n\n  posts;\n\n  constructor(private http : HttpClient, private service : ServiceService) { }\n\n  ngOnInit(): void {\n    this.getPosts();\n  }\n\n  getPosts() {\n    // this.service.getPostsSearch().subscribe(response => {\n    //   this.posts = response;\n    // });\n  }\n\n}","<input type=\"text\" name=\"search\" placeholder=\"Search..\">","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  admin;\n\n  @Input() isSearchPressed: Boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.admin = window.sessionStorage.getItem(\"admin\");\n  }\n\n  logout() {\n    sessionStorage.clear();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <input #admin1 type=\"hidden\" value=\"{{admin}}\">\n    <ul class=\"nav navbar-nav mr-auto\">\n        <li *ngIf=\"admin1.value == 'true'\" class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/addUser\">Add User</a></li>\n        <li *ngIf=\"admin1.value == 'true'\" class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/userList\">User List</a></li>\n        <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/dashboard\">Dashboard</a></li>\n        <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/addPost\">Post</a></li>\n        <li *ngIf=\"!isSearchPressed else searchBar\" class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/search\">Search</a></li>\n        <ng-template #searchBar><app-searchbar></app-searchbar></ng-template>\n\n    </ul>\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" (click)=\"logout()\" routerLink=\"/login\">Logout</a></li>\n    </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor(private http : HttpClient, private service : ServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n}","<app-navbar [isSearchPressed]=\"true\"></app-navbar>\n\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\n    integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\">","import { registerLocaleData } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { AdminAuthGuardService } from './admin-auth-guard.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginAuthGuardService } from './login-auth-guard.service';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { SearchComponent } from './search/search.component';\nimport { UserListComponent } from './user-list/user-list.component';\n\nconst routes: Routes = [\n  {\n    path : \"\", component: LoginComponent\n  },\n  {\n    path: \"login\", component: LoginComponent\n  },\n  {\n    path: \"addUser\", component: AddUserComponent, canActivate: [LoginAuthGuardService, AdminAuthGuardService]\n  },\n  {\n    path: \"dashboard\", component: DashboardComponent, canActivate: [LoginAuthGuardService]\n  },\n  {\n    path: \"search\", component: SearchComponent, canActivate: [LoginAuthGuardService]\n  },\n  {\n    path: \"register\", component: RegisterComponent\n  },\n  {\n    path: \"userList\", component: UserListComponent, canActivate: [LoginAuthGuardService, AdminAuthGuardService]\n  },\n  {\n    path: \"addPost\", component: AddPostComponent, canActivate: [LoginAuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ServiceService } from \"../service.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user;\n\n  constructor(private formBuilder : FormBuilder, private service : ServiceService) { }\n\n  ngOnInit(): void {\n    this.user = this.formBuilder.group({\n      username : new FormControl(''),\n      password: new FormControl('')\n    })\n  }\n\n  login() {\n    this.service.login(this.user.value.username, this.user.value.password)\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <ul class=\"nav navbar-nav mr-auto\">\n        <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/login\">Login</a></li>\n        <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"/register\">Register</a></li>\n    </ul>\n</nav>\n\n<div class = \"d-flex justify-content-center\">\n    <div class=\"card m-3\">\n        <h5 class=\"card-header\"> Login </h5>\n        <div class=\"card-body\">\n            <form [formGroup]=\"user\" (ngSubmit)=\"login()\">\n                <div class=\"form-group\">\n                    <label>Username:</label>\n                    <input formControlName=\"username\" type=\"text\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label>Password:</label>\n                    <input formControlName=\"password\" type=\"password\" class=\"form-control\" required>\n                </div>\n                <div class=\"text-center\">\n                    <button class=\"btn btn-primary\">Login</button> &nbsp;\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}